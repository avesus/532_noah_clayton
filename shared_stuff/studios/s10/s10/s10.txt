1)
Noah Goldstein & Clayton Knittel

2)

Code:

#ifndef __WATCHER_H__
#define __WATCHER_H__

#include <string>
#include <atomic>
#include <sstream>
#include <vector>
#include <iostream>
#include <thread>
#include <mutex>
#include <iterator>
#include <map>


enum event_type{
  CALLING = 0,
  CALLED = 1,
  RETURNING = 2,
  RETURNED = 3,
  ALLOCING = 4,
  FREED = 5,
  MUTEX_ACQUIRING = 6,
  MUTEX_ACQUIRED = 7,
  MUTEX_RELEASING = 8,
  MUTEX_RELEASED = 9,
  THREAD_WAITING = 10,
  THREAD_WAKUP = 11,
  THREAD_NOTIFY_ONE = 12,
  THREAD_NOTIFY_ALL = 13,
  UNKNOWN = 14
};
#define NUM_EVENTS 15
#define EV_STR_LEN 32
const char event_strings[NUM_EVENTS][EV_STR_LEN] = {
  "Calling",  //0
  "Called", //1
  "Returning", //2
  "Returned", //3
  "Allocing", //4
  "Freed", //5
  "Mutex Acquiring", //6
  "Mutex Acquired", //7
  "Mutex Releasing", //8
  "Mutex Released", //9
  "Thread Waiting", //10
  "Thread Wakeup", //11
  "Thread Notify One", //12
  "Thread Notify All", //13
  "Unknown" //14
};

std::ostream& operator<<(std::ostream& os, const event_type ev);

#define EV_MSG_LEN 128
#endif

#include "watcher.h"


std::ostream& operator<<(std::ostream& os, const event_type ev)
{
  char buf[EV_MSG_LEN] = "";
  sprintf(buf,  "[%d]: %s\n", (int)ev, event_strings[(int)ev]);
  os << buf;
  return os;
}
int main(int argc, char* argv[]){
  cout << CALLED;
  progname = argv[0];
  ArgParser* ap = createArgumentParser(&argp);
  int result = parseArguments(ap, argc, argv);
  if(result){
    die("Error parsing arguments");
  }
  freeCommandLine();
  freeArgumentParser(ap);
  cout << RETURNING;
  return SUCCESS;
}


noah[07:23:22]:~/programs/classes/active/532/532_noah_clayton/shared_stuff/studios/s10/s10$ ./s10 
[1]: Called
[2]: Returning


3)

#ifndef __WATCHER_H__
#define __WATCHER_H__

#include <string>
#include <atomic>
#include <sstream>
#include <vector>
#include <iostream>
#include <thread>
#include <mutex>
#include <iterator>
#include <map>


enum event_type{
  CALLING = 0,
  CALLED = 1,
  RETURNING = 2,
  RETURNED = 3,
  ALLOCING = 4,
  FREED = 5,
  MUTEX_ACQUIRING = 6,
  MUTEX_ACQUIRED = 7,
  MUTEX_RELEASING = 8,
  MUTEX_RELEASED = 9,
  THREAD_WAITING = 10,
  THREAD_WAKUP = 11,
  THREAD_NOTIFY_ONE = 12,
  THREAD_NOTIFY_ALL = 13,
  UNKNOWN = 14
};
#define NUM_EVENTS 15
#define EV_STR_LEN 32
const char event_strings[NUM_EVENTS][EV_STR_LEN] = {
  "Calling",  //0
  "Called", //1
  "Returning", //2
  "Returned", //3
  "Allocing", //4
  "Freed", //5
  "Mutex Acquiring", //6
  "Mutex Acquired", //7
  "Mutex Releasing", //8
  "Mutex Released", //9
  "Thread Waiting", //10
  "Thread Wakeup", //11
  "Thread Notify One", //12
  "Thread Notify All", //13
  "Unknown" //14
};


#define EV_MSG_LEN 256

struct event_info{
  unsigned long tid;
  void * obj;
  void * func;
  void * other;
  char * file;
  int line;
  event_type ev;
  event_info() {
    this->tid = 0;
    this->obj = NULL;
    this->func = NULL;
    this->other = NULL;
    this->file = NULL;
    this->line = 0;
    this->ev = UNKNOWN;
  }

};
  


std::ostream& operator<<(std::ostream& os, const event_type ev);
std::ostream& operator<<(std::ostream& os, const event_info ei);

#endif

#include "watcher.h"


std::ostream& operator<<(std::ostream& os, const event_type ev)
{
  char buf[EV_MSG_LEN] = "";
  sprintf(buf,  "[%d]: %s\n", (int)ev, event_strings[(int)ev]);
  os << buf;
  return os;
}


std::ostream& operator<<(std::ostream& os, const event_info ei)
{
  char buf[EV_MSG_LEN] = "";
  sprintf(buf,
	  "Event[%d] {"
	  "\n\tEv Name: %s"
	  "\n\tTid: %lu"
	  "\n\tObj: %p"
	  "\n\tFunc: %p"
	  "\n\tOther: %p"
	  "\n\tFile: %s"
	  "\n\tLine: %d"
	  "\n\t}\n",
	  ei.ev,
	  event_strings[ei.ev],
	  ei.tid,
	  ei.obj,
	  ei.func,
	  ei.other,
	  ei.file,
	  ei.line);
  os << buf;
  return os;
  }


int main(int argc, char* argv[]){
  struct event_info ei;
  ei.file = __FILE__;
  ei.line = __LINE__;
  ei.ev = CALLED;
  cout << ei;
  progname = argv[0];
  ArgParser* ap = createArgumentParser(&argp);
  int result = parseArguments(ap, argc, argv);
  if(result){
    die("Error parsing arguments");
  }
  freeCommandLine();
  freeArgumentParser(ap);
  ei.ev = RETURNING;
  cout << ei;
  return SUCCESS;
}

noah[07:28:14]:~/programs/classes/active/532/532_noah_clayton/shared_stuff/studios/s10/s10$ ./s10 
Event[1] {
	Ev Name: Called
	Tid: 0
	Obj: (nil)
	Func: (nil)
	Other: (nil)
	File: s10.cpp
	Line: 25
	}
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: (nil)
	Other: (nil)
	File: s10.cpp
	Line: 25
	}


4)
noah[07:45:54]:~/programs/classes/active/532/532_noah_clayton/shared_stuff/studios/s10/s10$ ./s10 
0: 
0x55df48970ae2: main
0: 
s10.cpp: 
Event[1] {
	Ev Name: Called
	Tid: 0
	Obj: (nil)
	Func: 0x55df48970ae2
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55df48970ae2: main
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55df48970ae2
	Other: (nil)
	File: s10.cpp
	Line: 28
	}


5)
noah[01:10:27]:~/programs/classes/active/532/532_noah_clayton/shared_stuff/studios/s10/s10$ ./s10 
0: 
0x55b1af5bca74: main
0: 
s10.cpp: 
Event[1] {
	Ev Name: Called
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca74
	Other: (nil)
	File: s10.cpp
	Line: 52
	}
0: 
0x55b1af5bca74: main
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca74
	Other: (nil)
	File: s10.cpp
	Line: 52
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca62: 
0: 
s10.cpp: 
Event[2] {
	Ev Name: Returning
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca62
	Other: (nil)
	File: s10.cpp
	Line: 28
	}
0: 
0x55b1af5bca74: main
0: 
s10.cpp: 
Event[1] {
	Ev Name: Called
	Tid: 0
	Obj: (nil)
	Func: 0x55b1af5bca74
	Other: (nil)
	File: s10.cpp
	Line: 52
	}
